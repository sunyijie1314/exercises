/*1060 队伍排列
春天到了，又到了踏青时节，小明一组8人决定去林园游玩。路上发现队伍乱糟糟的，小明决定整顿队伍，且整顿时，
总是两两交换人员(注意可以跨过其他人进行两两交换)。已知当前队伍序列N，目标序列总是为A0 A1 A2 ... A7。问最少经过多少次交换即可达成目标？
*/

/*IN
第一行：用例数量
剩余行：每行表示一个用例，表示N序列
例如：
2
A7 A1 A2 A3 A4 A5 A6 A0
A0 A2 A1 A4 A3 A5 A6 A7

2
A7 A1 A2 A3 A4 A5 A6 A0
A0 A2 A1 A4 A3 A5 A6 A7
*/

/*OUT
每个用例最少交换次数
例如：
1
2

1
2
*/

/*HINT
2
A7 A1 A2 A3 A4 A5 A6 A0
A0 A2 A1 A4 A3 A5 A6 A7
用例1  A7和A0交换即可，1次交换即可
用例2  A2和A1交换，A4和A3交换，2次交换即可
*/
#include <iostream>
#include <vector>
#include <string>
using namespace std;
int main()
{
	int n;
	cin >> n;
	for (size_t i = 0; i < n; i++)
	{
		vector<string> strV;
		for (size_t j = 0; j < 8; j++)
		{
			string str;
			cin >> str;
			strV.push_back(str);
		}
		int count = 0;
		for (size_t j = 0; j < 8; j++)
		{
			string min = strV[j];
			int tmp = 0;
			for (size_t k = j + 1; k < 8; k++)
			{
				if (strV[k] < min)
				{
					min = strV[k];
					tmp = k;
				}
			}
			if (tmp != 0)
			{
				string t = strV[tmp];
				strV[tmp] = strV[j];
				strV[j] = t;
				count++;
			}
		}

		cout << count << endl;
	}
}
