/*OUT
输出引起死锁的根因线程号，即 LWP 标识后的线程号，按从小到大输出，以空格分割
注意分为下面3种情况
1 A线程被线程B锁，线程B被线程C锁，线程C被线程A锁，则死锁线程A, B, C都需要输出
2 A线程被线程B锁，线程B被线程C锁，线程C被线程B锁，则死锁根因是B, C线程导致，只输出B, C (A只是因为B死锁而死锁，其并不属于死锁根因线程)
3  A线程被线程B锁，线程B被线程B锁, 这属于重复加锁死锁，则只输出B

注：不考虑同时存在不关联的多个死锁的情况。
例如线程A被线程A锁，线程B被线程B锁的情况不用考虑。

183158 183160
*/

/*HINT
线程183158 存在__pthread_mutex_lock 函数栈，其mutex参数中__owner为0x0002cb78=183160
线程183160和183157 无__pthread_mutex_lock 函数，和死锁无关
线程183160 存在__pthread_mutex_lock 函数栈，其mutex参数中__owner为0x0002cb76=183158
因此 线程183158 和线程183160 存在互锁关系，导致了死锁，经过升序排列后，输出
183158 183160

*/
