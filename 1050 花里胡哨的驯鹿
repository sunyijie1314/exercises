/*1050 花里胡哨的驯鹿
圣诞作坊提供买雪橇送驯鹿的服务。圣诞老爷爷需要他们送来8只驯鹿用于出力。圣诞老爷爷自己还有单独1只红鼻子驯鹿用于领头。
出力驯鹿的力量（P<=10）影响自己的初始速度（S，每单位时间能够行动的单位距离），即S=10-P；红鼻子驯鹿的力量固定为0，速度固定为100。
雪橇的初始速度取决于9只驯鹿中速度最小值min(S1, S2, ...)，初始载货量必定是所有驯鹿的力量之和*100。
每送出1个货物，货物数量减1，运动速度加1，但是最大速度上限为红鼻子驯鹿的速度。
已知圣诞老爷爷有480个单位时间去送礼物，且由于魔法加持，任意两户人家之间单位距离总是1（起点为自己家，不需要也不能送礼物），
将礼物放在袜子里不耗时，求当使用指定驯鹿时，最多能将礼物送给几户人家？
*/

/*IN
第一行为用例数，后续每一行为具体用例。
每一个具体用例包含8个数字，分别表示8只驯鹿的力量值。

例如：
2 // 用例数
1 2 3 4 5 6 7 8 // 8只驯鹿的力量值
8 7 6 5 4 3 2 1 // 8只驯鹿的力量值

2
1 2 3 4 5 6 7 8
8 7 6 5 4 3 2 1
*/

/*OUT
每个结果一行，分别表示最大能够送达的人数。

例如：
3600
3600

3600
3600
*/

#include <iostream>
using namespace std;
int main()
{
	int n;
	cin >> n;
	for (size_t i = 0; i < n; i++)
	{
		int p;
		int min = 10;
		int goodsNum = 0;
		for (size_t j = 0; j < 8; j++)
		{
			cin >> p;
			goodsNum += p;
			min = 10 - p > min ? min : 10 - p;
		}
		goodsNum *= 100;
		if (min == 0)
		{
			cout << 0 << endl;
			continue;
		}

		int count = 0;
		double time = 0.0;
		size_t j = min;
		for (; j < 100; j++)
		{
			if (time >= 480 || count >= goodsNum)
			{
				cout << count << endl;
				break;
			}
			time += 1.0 / j;
			count++;
		}

		if (j == 100)
		{
			while (time <= 480 && count <= goodsNum)
			{
				time += 0.01;
				count++;
			}
			cout << count - 1 << endl;
			continue;
		}
	}
}
