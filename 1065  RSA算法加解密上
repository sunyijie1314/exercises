/*1065  RSA算法加解密
RSA算法是最流行的非对称加密算法，密钥有两把，分别称公钥和私钥，通讯双方，一方采用公钥加密数据，另一方采用私钥解密，也可以一方用私钥加密，另一方用公钥解密。
RSA算法的相关知识请参考如下链接分享：
http://weshare/kms/multidoc/kms_multidoc_knowledge/kmsMultidocKnowledge.do?method=view&fdId=15b4795ad1edb978f299a474647afb78


RSA算法的大致原理是，生成两个超大位数的质数计算乘积，算法安全性基于因数分解（即将一个大数分解为两个质数的乘积）的难度。
公私钥的产生步骤如下：
1）随机产生两个质数, 如p1=29, p2=43
2）计算两个质数的乘积, n=p1xp2=1247
3）计算n的欧拉值: o=₲(n)=1176
4）随机选择一个整数e，条件是1< e < o，且e与o 互质, 这里选e=37
5）计算e对于o的模反元素d=445
公钥: (n, e)为一组, 即(1247, 37)
私钥: (n, d)为一组, 即(1247, 445)

存在公式：如 y = (x^e Mod n)， 那么可以推导出：x = (y^d Mod n)。
前一步即为加密公式，后一步为解密公式。
符号解释：^表示幂次方，x^y即x的y次方，Mod表示取模，即左值整除右值后的余数，等同于C/C++中的符号“%”。
*/

/*IN
总共有多行，第一行表示用例个数，接下来的每一行表示一个测试用例，用例由私钥的n值、私钥的d值、加密值y三部分组成，中间使用空格分隔。
其中n表示的值为两个质数的乘积，d表示模反元素。 n<10000，d<1000，y<100。
注：实际应用中，使用的质数是非常大的，本题只是为了让大家了解RSA算法的基础原理，选用的质数为十进制格式的2位数。
附实例的表示公钥的字符串：
