int main()
{
	string str;
	int n = 1;
	int last = 0;
	stack<int> strv;
	stack<string> strs;
	while (cin>>str)
	{
		//strv.push_back(str);
		if (str == "+"||str=="-")
		{
			while (!strv.empty() && (strv.top()==1 || strv.top()==2))
			{
				string tmp2 = strs.top();
				strs.pop();
				string tmp = strs.top();
				strs.pop();
				strv.pop();
				string tmp1 = strs.top();
				strs.pop();
				string nub = "D." + to_string(n);
				n++;
				cout << nub << " = " << tmp1 << " " << tmp << " " << tmp2 << endl;
				strs.push(nub);
			}
			strv.push(1);
		}
		else if (str == "*"||str =="/")
		{
			if (!strv.empty() && strv.top() == 2)
			{
				string tmp2 = strs.top();
				strs.pop();
				string tmp = strs.top();
				strs.pop();
				strv.pop();
				string tmp1 = strs.top();
				strs.pop();
				string nub = "D." + to_string(n);
				n++;
				cout << nub << " = " << tmp1 << " " << tmp << " " << tmp2 << endl;
				strs.push(nub);
			}
			strv.push(2);
		}
		else if (str == "(")
		{
			strv.push(3);
		}
		else if (str == ")")
		{
			while (1)
			{
				string tmp2 = strs.top();
				strs.pop();
				string tmp = strs.top();
				strs.pop();
				strv.pop();
				string tmp1 = strs.top();
				strs.pop();
				string nub = "D." + to_string(n);
				n++;
				cout << nub << " = " << tmp1 << " " << tmp << " " << tmp2 << endl;
				if (strs.top()=="(")
				{
					strs.pop();
					strv.pop();
					strs.push(nub);
					break;
				}
				strs.push(nub);
			}
		}

		if (str != ")")
		{
			strs.push(str);
		}

		if (cin.get()=='\n')
		{
			break;
		}
	}

	while (1)
	{
		string tmp2 = strs.top();
		strs.pop();
		string tmp = strs.top();
		strs.pop();
		strv.pop();
		string tmp1 = strs.top();
		strs.pop();
		string nub = "D." + to_string(n);
		n++;
		cout << nub << " = " << tmp1 << " " << tmp << " " << tmp2 << endl;
		if (strs.empty())
		{
			break;
		}
		strs.push(nub);
	}

}
