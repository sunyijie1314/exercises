/*1026 位图填充
有一张4行7列的位图M，每一位大小为1bit, 现有7种不同的形状S，要填充到位图中去。
位图的座标系为：
0—————>
|
|
V
填充的规则如下：
填充前S可能被旋转90度，180度或270度。
填充到的位置用（x,y）表示，x为行号，y为列号
将S的左下角位置填充到（x,y）,其它依次填充到相应位置。
若S的最右边超出了位图的范围，则整个S都不能填充。
若S的最下边超出了位图的范围，则整个S都不能填充。
S的形状有7种，它们是：
方形	11
		11
L形		10
		10
		11
L形镜像	01
		01
		11
棍形	1111
T形		010
		111
Z形		110
		011
Z形镜像	011
		110

*/

/*IN
输入为S, X, Y, R
1<＝S<＝7 ，{1＝方形，2＝L形，3＝L形镜像， 4＝棍形，5＝T形，6＝Z形， 7＝Z形镜像}
0<=X<10
0<=Y<=7
R={0,1,2,3},是旋转的度数（顺时针）。其中{0＝0， 1＝90， 2＝180， 3＝270}

1 3 0 2
*/

/*OUT
M为一个位图，用0表示未被填充，1表示被填充。
例如：
0000000
0000000
1100000
1100000

0000000
0000000
1100000
1100000
*/

/*HIT
输入
1 3 0 2
表示在（3，0）位置填充旋转了2（180度）的 1形状（方块）
*/
#include <iostream>
#include <vector>
#include <map>
#include <string.h>

using namespace std;

int R[4] = { 0, 90, 180, 270 };
typedef pair<int, int> intPair;
typedef vector<intPair> intPairVec;
typedef vector<intPairVec> intPair2Vec;
