/*1072 解码自适应
在NVR等后端设备中，主控芯片解码能力有限，当进行多画面预览时，如果解码能力不足会自动切换辅码流进行预览，如果全部切换辅码流分辨率后能力还不够，则显示黑屏
给出N个通道的辅码流分辨率及帧率，求最多能解码多少路。
总能力C是一个正整数，每个通道的解码能力是分辨率宽*高*帧率
*/

/*IN
第一行输入n c表示当前预览有n个窗口(n <=128)，总解码能力为c
接下来每行输入w*h f，表示每个通道的分辨率和帧率
w表示宽，h表示高，f表示帧率（测试数据中都是正整数）

4 212336640
176*144 25
176*144 25
640*480 25
160*128 25
*/

/*OUT
输出当前预览界面中最多能够解码显示多少路

4
*/

/*HINT
176*144*25+176*144*25+640*480*25+160*128*25<212336640
所以所有通道都可以正常解码显示
*/
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
int main()
{
	int n;
	long long c;
	vector<int> decode;
	cin >> n >> c;
	for (size_t i = 0; i < n; i++)
	{
		string s;
		int f;
		cin >> s >> f;
		int w = stoi(s.substr(0, s.find("*")));
		int h = stoi(s.substr(s.find("*") + 1));
		decode.push_back(w * h * f);
	}
	sort(decode.begin(), decode.end());
	int count = 0;
	for (size_t i = 0; i < decode.size(); i++)
	{
		c -= decode[i];
		if (c>=0)
		{
			count++;
		}
		else
		{
			break;
		}
	}
	cout << count << endl;
}
