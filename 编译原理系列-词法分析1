/*1074 编译原理系列-词法分析
C/C++编译器，从源代码到可执行文件，整个过程称为Build，大致需要经过四个步骤：
1、预处理，Preprocess，即将源文件中的头文件包含引入、宏定义展开、去除注释等，生成一个可独立编译单元；
2、编译，Compile，从C/C++高级语言代码翻译为汇编代码；
3、汇编，Assemble，将汇编代码翻译为二进制的机器码，生成可重定位文件；
4、链接，link，即将多个可重定位文件链接为最终的可执行文件；
整个详细的过程可参考如下分享：
http://km.dahuatech.com/kms/multidoc/kms_multidoc_knowledge/kmsMultidocKnowledge.do?method=view&fdId=1630acd91b724b176aa0b4a402183baa

以上4步中，其中第2步Compile，是最为核心的一步，Compile过程又大致分为词法分析、语法分析、语义分析、中间树构建、中间代码生成、优化、生成汇编码等几个过程。
词法分析的第一步，是从输入的源文件中，提取一串串的token，token是一个不可分割的最小单词，常见的token有以下五种类型：
token类型	含义	范围
1	关键字		if、do、while、break、continue、for、return、int（简单起见，我们就认为只有这8种关键字，真实的编译器关键字是非常丰富的）
2	变量/函数名	变量名可由英文字母（a-z，A-Z）、数字（0-9）、下划线（_）组成，但数字不能作为变量名起始字符，如 var32、var_32
3	数字		由0-9的数字字符组成，起始字符可为0（表示八进制），或0x/0X（表示十六进制），非0（表示十进制）
