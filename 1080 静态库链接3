已知：
1 输入中不会存在冗余库，即不会存在缺少某个库却能够链接通过的情况
2 不存在不同库中有相同函数符号的情况
3 所有库都有实现的函数符号，但引用的函数符号数目可能为0，即存在某个库不依赖其他库的情况
4 所有库引用的符号都会被链接到库里面，无需再细化考虑引用的符号不会被程序链接的情况，例如
  A库实现了 funA1 funA2，引用了funC1 funC2，如果funC1和func2只是在funA2中被调用，未被funA1调用，那么如果funA2 没有被程序链接调用，则funC1和funC2 可以不链接到程序中，
  也可以链接通过， 因此为了简化逻辑，认为每个引用的函数符号，都会在实现的函数符号中被调用

8
1 main
2 funA1 funA2
2 funA1 funA2
2 funC1 funC2
2 funB1 funB2
0
2 funC1 funC2
2 funB1 funB2
*/

/*OUT
如果应用程序和库按题目输入的顺序能够链接成功，输出true，否则输出false

false
*/

/*HINT
8  接下来需要解析8行输入
1 main                       ->  应用程序实现了1个函数，main
2 funA1 funA2             -> 应用程序调用了2个函数，funA1 funA2
2 funA1 funA2           -> A库实现的2个函数符号
2 funC1 funC2           -> A库引用的2个函数符号
2 funB1 funB2           -> B库实现的2个函数符号
0                               -> B库没有引用其他符号
2 funC1 funC2           -> C库实现的2个函数符号
2 funB1 funB2           -> C库引用的2个函数符号
当按输入库的顺序A  B C 进行链接时，应用程序链接A库,  存在 funC1  funC2  未定义， 链接B库, funB1  funB2 符号未被引用，因此被丢弃，链接C，
将A库依赖的funC1和funC2 函数符号变为已定义，遗留funB1和funB2 未定义， 因此当按A  B C的顺序进行链接时，存在未定义的符号funB1和funB2，链接失败，输出 false
*/
