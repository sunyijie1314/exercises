/* 1017
给你一张n*m的西湖地图二值图，其中西湖的轮廓用1表示，轮廓内和轮廓外均用0表示。
现在请你统计西湖的面积，即轮廓内0的个数。
*/

/*
输入包含多组数据，每组数据第一行包含两个正整数n（3≤n≤10）和m（3≤m≤10）。
紧接着有n行，每行m个数字，代表地图，数字之间无空格。
数据保证只有一片连续的湖泊。
*/

/* IN
10 10
0000000000
0001101000
0010010100
0010000010
0100000010
0100000100
0010001000
0010001000
0011010000
0000100000
*/

/* OUT
26
*/

#include <iostream>
using namespace std;

int main()
{
	char carr[10] = {'0'};//f:第一行1，e：最后一行1，d：偶数个1,s:奇数个1
	int arr[10][10] = { 0 };
	int n, m;
	int count = 0;
	string str;
	cin >> n >> m;
	for (int i=0;i<n;i++)
	{
		cin >> str;
		for (int j=0;j<m;j++)
		{
			arr[i][j] = str[j] - '0';
			if (arr[i][j] == 1)
			{
				count++;
			}
		}
		if (count%2==0 && count!=0)
		{
			carr[i] = 'd';
		}
		else
		{
			carr[i] = '0' + count;
		}
		count = 0;
	}
	for (int i = 0;i<n;i++)
	{
		if (carr[i] != '0')
		{
			carr[i] = 'f';
			break;
		}
	}
	for (int i = n-1; i >=0; i--)
	{
		if (carr[i] != '0')
		{
			carr[i] = 'e';
			break;
		}
	}

	int area = 0;
	bool start = false;
	bool sstart = false;
	bool end = false;
	int scout = 0;

	for (int i = 0; i < n; i++)
	{
		scout = 0;
		end = false;
		start = false;
		sstart = false;
		for (int j = 0; j < m; j++)
		{
			if (carr[i] == 'f' || carr[i] == 'e')
			{
				break;
			}
			if (carr[i] == 'd')
			{
				if (arr[i][j] == 1 && start == false)
				{
					start = true;
					continue;
				}
				if (start == true && arr[i][j] == 0)
				{
					area++;
					continue;
				}
				if (arr[i][j] == 1 && start == true)
				{
					start = false;
				}
			}
			else if (carr[i] != '0')
			{
				if (arr[i][j] == 1 && end == false)
				{
					sstart = true;
					scout++;
				}
				if (scout == (carr[i] - '0'))
				{
					end = true;
					sstart = false;
				}
				if (sstart == true && arr[i][j] == 0)
				{
					area++;
				}
			}
		}

	}
	

    std::cout << area << endl; 
	return 0;
}
