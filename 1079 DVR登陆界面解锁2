注意：
1. 不存在仅输入一个点的情况，即至少1条线段（2个点）

4
(3,3)(5,1)(1,1)(5,5)(1,3)
*/

/*OUT
数字表示的手势密码

532194
*/

/*HINT
如题目描述所示，上述手势密码经过的数字就是532194
*/
#include <iostream>
#include <string>
#include <vector>
#include <math.h>
using namespace std;
char getnum(int a, int b)
{
	if (a == 1 && b == 1)
	{
		return '1';
	}
	else if (a == 3 && b == 1)
	{
		return '2';
	}
	else if (a == 5 && b == 1)
	{
		return '3';
	}
	else if (a == 1 && b == 3)
	{
		return '4';
	}
	else if (a == 3 && b == 3)
	{
		return '5';
	}
	else if (a == 5 && b == 3)
	{
		return '6';
	}
	else if (a == 1 && b == 5)
	{
		return '7';
	}
	else if (a == 3 && b == 5)
	{
		return '8';
	}
	else if (a == 5 && b == 5)
	{
		return '9';
	}
	return '0';
}
int main()
{
	int n;
	cin >> n;
	string str;
	cin >> str;
	string out;
	char a = 0, b = 0;
	int num = 0;
	vector<pair<int, int>> vpi;
	for (size_t i = 0; i < str.size(); i++)
	{
		if (str[i] == '(')
		{
			num = 1;
			continue;
		}
		if (str[i] == ',')
		{
			num = 2;
			continue;
		}

		if (num == 1)
		{
			a = str[i];
			num = 0;
			continue;
		}
		else if (num == 2)
		{
			b = str[i];
			num = 0;
			continue;
		}

		vpi.push_back(make_pair(a - '0', b - '0'));

	}

	for (size_t i = 1; i < vpi.size(); i++)
	{
		char tmp = getnum(vpi[i - 1].first, vpi[i - 1].second);
		if (out.find(tmp) == string::npos)
		{
			out += tmp;;
		}
		
		int tmpx = abs(vpi[i].first - vpi[i - 1].first);
		int tmpy = abs(vpi[i].second - vpi[i - 1].second);
		if (tmpx == 4 && tmpy == 4)
		{
			if (out.find('5') == string::npos)
			{
				out+='5';
			}
		}
		else if (tmpx==4 && tmpy==0)
		{
			tmp = getnum((vpi[i].first + vpi[i - 1].first) / 2, vpi[i].second);
			if (out.find(tmp) == string::npos)
			{
				out += tmp;
			}
		}
		else if (tmpx == 0 && tmpy == 4)
		{
			tmp = getnum(vpi[i].first, (vpi[i].second + vpi[i - 1].second) / 2);
			if (out.find(tmp) == string::npos)
			{
				out += tmp;
			}
		}
		tmp = getnum(vpi[i].first, vpi[i].second);
		if (out.find(tmp) == string::npos)
		{
			out += tmp;
		}

	}
	cout << out << endl;
}
